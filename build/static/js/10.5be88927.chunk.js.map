{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/forms/create/create.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","CreateForm","props","useState","users","setUsers","show","description","setDescription","collapse","setCollapse","components","useSelector","state","permissionReducer","dispatch","useDispatch","useEffect","type","axios","get","then","res","data","usersData","catch","xl","className","variant","color","onChange","e","target","checked","name","id","rows","placeholder","onClick","saveText","form","display","saveForm","title","map","component","from","pop","post","alert","history","saveComponent","Set","val","deleteComponent","options","builder","layout","basic","advanced","premium","customBasic","default","weight","textfield","datetime","day","time","textarea","uploadImages","icon","schema","storage","label","image","key","input","multiple","persistent","xs","user","username","add","delete"],"mappings":"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","file":"static/js/10.5be88927.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from 'react';\nimport {FormEdit} from 'react-formio';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CButton, CCard, CCardBody, CCardFooter, CCardHeader, CCol, CCollapse, CRow, CSwitch, CTextarea, CToggler } from '@coreui/react';\nimport { DocsLink } from 'src/reusable';\n\n\nexport default function CreateForm(props) {\n\n  const [users, setUsers] = useState([])\n  const [description, setDescription] = useState({value:\"\",show:false})\n  const [collapse, setCollapse] = useState(false)\n  const components = useSelector(state=> state.permissionReducer);\n  const dispatch = useDispatch()\n  const f = { display: 'form' };\n\n  useEffect(()=>{\n        dispatch({type:'clear-components'})\n      axios.get(\"/user/list\").then(res=>{\n          setUsers(res.data.usersData)\n      }).catch(err=>{\n          setUsers([])\n      })\n  },[])\n\n\n  const onSaveForm = (form)=>{\n        if(form.title){\n            \n            form.components = [...components.map(component=>{\n                component.users = Array.from(component.users);\n                return component\n            }), form.components.pop()];\n            \n        axios.post(\"/form/create\",{...form,description}).then(res=>{\n        alert(\"Survey Created\")\n            props.history.push(\"/form/list\")\n\n        }).catch(err=>{\n        alert(\"Something Wrong\")\n        })}else{\n            alert(\"you should add title\")\n\n        }\n    }\n\n    const handleComponentSaved = (component)=>{\n        component['users'] = new Set()\n        dispatch({type:'add-component',val:component})\n    }\n    const handleComponentDeleted = (component)=>{\n        dispatch({type:'remove-component',val:component})\n    }\n\n  return (\n        <div>\n            <h1>Create Report</h1>\n            <hr/>\n            <CRow  >\n                <CCol xl=\"12\">\n                <CCard>\n                <CCardHeader>\n                    Report Description\n                </CCardHeader>\n                <CCollapse show={collapse}>\n                    <CCardBody>\n                    <span>Display to User  </span>\n                    <CSwitch\n                            className={'ml-4'} \n                            variant={'3d'} \n                            color={'primary'} \n                            onChange={(e)=>{\n                                if(e.target.checked){\n                                    setDescription({...description, show:true})\n                                }else{\n                                    setDescription({...description, show:false})\n                                }\n                                \n                            }}\n                        />\n                    <CTextarea \n                            name=\"textarea-input\" \n                            id=\"textarea-input\" \n                            rows=\"9\"\n                            placeholder=\"Add place description here\" \n                            value={description.value}\n                            onChange={(e)=>setDescription({...description,value:e.target.value})}\n                    />\n\n                    </CCardBody>\n                </CCollapse>\n                <CCardFooter>\n                    <CButton\n                    color=\"primary\"\n                    onClick={()=>setCollapse(!collapse)}\n                    className={'mb-1'}\n                    >Add Description</CButton>\n                </CCardFooter>\n                </CCard>\n                </CCol>\n            </CRow>\n            <FormEdit \n                saveText=\"Create Report\"\n                form={f}\n                saveForm={onSaveForm}\n                saveComponent={handleComponentSaved} \n                deleteComponent={handleComponentDeleted}   \n                options = {{\n                    builder: {\n                        layout: false,\n                        data: false,\n                        basic: false,\n                        advanced: false,\n                        premium: false,\n                        customBasic: {\n                            title: 'Elements',\n                            default: true,\n                            weight: 0,\n                            components: {\n                              textfield:true,\n                              datetime:true,\n                              day:true,\n                              time:true,\n                              textarea: true,\n                                uploadImages: {\n                                    title: 'Upload Images',\n                                    icon: 'image',\n                                    schema: {\n                                    storage: \"base64\",\n                                    label: 'Images',\n                                    image:true,\n                                    type: 'file',\n                                    key: 'images',\n                                    input: true,\n                                    multiple: true,\n                                    persistent: false,\n                                    \n                                    },\n    \n                            }\n                        }\n                    }\n                 }\n                }}\n                \n            />\n            <hr/>\n            <div>\n                <h3>Permissions</h3>\n                <CCol xs={12}>\n                    <CCard className=\"mb-4\">\n                    <CCardBody>\n                        <p className=\"text-medium-emphasis small\">\n                            This Table to handle permssions on Report\n                        </p>\n                        <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th></th>\n                              \n                                {users.map(user=><th>{user.username}</th>)}\n                            </tr>\n                        </thead>\n                        <tbody>\n                                {components.map(component=>{return <>\n                                        <tr>\n                                            <td>{component.label}</td>\n                                            {users.map(user=><td>\n                                                <CSwitch className={'mx-1'} \n                                                        variant={'3d'} \n                                                        color={'primary'} \n                                                        onChange={(e)=>\n                                                            {if (e.target.checked){\n                                                               component.users.add(user.username)\n                                                            //    console.log(component.users)\n                                                            }else{\n                                                                component.users.delete(user.username)\n                                                                // console.log(component.users)\n                                                            }}\n                                                        }  />\n                                            </td>)}\n                                        </tr>\n                                </>})}\n                            \n                        </tbody>\n                        </table>\n           \n                        </CCardBody>\n                        </CCard>\n                </CCol>\n            </div>\n        </div>\n    );\n  \n}"],"sourceRoot":""}