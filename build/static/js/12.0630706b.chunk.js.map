{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/forms/edit/edit.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","EditForm","props","form_state","location","state","form","useState","users","setUsers","components","useSelector","permissionReducer","dispatch","useDispatch","useEffect","axios","get","then","res","data","usersData","catch","saveText","saveComponent","component","Set","type","val","deleteComponent","saveForm","title","map","from","pop","put","_id","history","alert","options","builder","layout","basic","advanced","premium","customBasic","default","weight","textfield","datetime","day","time","textarea","uploadImages","icon","schema","storage","label","image","key","input","multiple","persistent","xs","className","user","username","has","variant","color","defaultChecked","onChange","e","target","checked","add","delete"],"mappings":"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","file":"static/js/12.0630706b.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from 'react';\nimport {FormEdit} from 'react-formio';\nimport axios from 'axios';\nimport { CCard, CCardBody, CCol, CSwitch } from '@coreui/react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function EditForm(props) {\n    const form_state = props.location.state.form\n    const [form, setForm] = useState(form_state.form);\n    const [users, setUsers] = useState([])\n    const components = useSelector(state=> state.permissionReducer);\n    const dispatch = useDispatch()\n\n    useEffect(()=>{\n        axios.get(\"/user/list\").then(res=>{\n            setUsers(res.data.usersData)\n        }).catch(err=>{\n            setUsers([])\n        })\n    },[])\n\n    const onSaveForm = (form)=>{\n        if(form.title){\n            form.components = [...components.map(component=>{\n                component.users = Array.from(component.users);\n                return component;\n            }),form.components.pop()];\n        axios.put(`/form/edit/${form_state._id}`,form).then(res=>{\n            props.history.push(`/form/display/${form_state._id}`)\n            \n        }).catch(err=>{\n        alert(\"Something Wrong\")\n        })}else{\n            alert(\"you should add title\")\n\n        }\n    }\n\n\n\n    const handleComponentSaved = (component)=>{\n        component['users'] = new Set()\n        dispatch({type:'add-component',val:component})\n    }\n    const handleComponentDeleted = (component)=>{\n        dispatch({type:'remove-component',val:component})\n    }\n  return (\n        <div>\n            <h1>Edit Form</h1>\n            <hr/>\n            \n            \n            <FormEdit \n                saveText=\"Edit Form\"\n                form ={form}\n                saveComponent={handleComponentSaved} \n                deleteComponent={handleComponentDeleted}\n                saveForm = {onSaveForm}    \n                options = {{\n                    builder: {\n                        layout: false,\n                        data: false,\n                        basic: false,\n                        advanced: false,\n                        premium: false,\n                        customBasic: {\n                            title: 'Elements',\n                            default: true,\n                            weight: 0,\n                            components: {\n                              textfield:true,\n                              datetime:true,\n                              day:true,\n                              time:true,\n                              textarea: true,\n                              uploadImages: {\n                                title: 'Upload Images',\n                                icon: 'image',\n                                schema: {\n                                storage: \"base64\",\n                                label: 'Images',\n                                image:true,\n                                type: 'file',\n                                key: 'images',\n                                input: true,\n                                multiple: true,\n                                persistent: false,\n                                \n                                },\n\n                            }\n                        }\n                    }\n                 }\n                }}\n            />\n             <div>\n                <h3>Permissions</h3>\n                <CCol xs={12}>\n                    <CCard className=\"mb-4\">\n                    <CCardBody>\n                        <p className=\"text-medium-emphasis small\">\n                            This Table to handle permssions on Report\n                        </p>\n                        <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th></th>\n                              \n                                {users.map(user=><th>{user.username}</th>)}\n                            </tr>\n                        </thead>\n                        <tbody>\n                                {components.map(component=>{return <>\n                                        <tr>\n                                            <td>{component.label}</td>\n                                            {users.map(user=><td>\n                                                \n                                                {(component.users && component.users.has(user.username) )?  <CSwitch className={'mx-1'} \n                                                        variant={'3d'} \n                                                        color={'primary'}\n                                                        defaultChecked\n                                                        onChange={(e)=>\n                                                            {if (e.target.checked){\n                                                               e.target.checked = false;\n                                                               component.users.add(user.username)\n                                                            //    console.log(component.users)\n                                                            }else{\n                                                                component.users.delete(user.username)\n                                                                // console.log(component.users)\n                                                            }}\n                                                        }  />:\n                                                        <CSwitch className={'mx-1'} \n                                                        variant={'3d'} \n                                                        color={'primary'}\n                                                        \n                                                        onChange={(e)=>\n                                                            {if (e.target.checked){\n                                                                e.target.checked=true;\n                                                               component.users.add(user.username)\n                                                            //    console.log(component.users)\n                                                            }else{\n                                                                e.target.checked=false;\n                                                                component.users.delete(user.username)\n                                                                // console.log(component.users)\n                                                            }}\n                                                        }  />}\n                                              \n                                            </td>)}\n                                        </tr>\n                                </>})}\n                            \n                        </tbody>\n                        </table>\n           \n                        </CCardBody>\n                        </CCard>\n                </CCol>\n            </div>\n\n        </div>\n    );\n  \n}"],"sourceRoot":""}