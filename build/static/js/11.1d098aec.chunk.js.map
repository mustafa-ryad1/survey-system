{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/forms/display/display.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","DisplayForm","props","useState","form","setForm","collapse","setCollapse","params","match","login","useSelector","state","form_id","id","useEffect","url","isAdmin","axios","get","then","res","_form","data","catch","alert","history","description","show","xl","color","onClick","className","onSubmit","user_form_data","user_data","index","type","includes","replace","components","map","item","key","user","label","input_type","title","console","log","post","options","template","readOnly"],"mappings":"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","file":"static/js/11.1d098aec.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from 'react';\nimport {Form} from 'react-formio';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { CButton, CCard, CCardBody, CCardFooter, CCardHeader, CCol, CCollapse, CRow } from '@coreui/react';\n\nexport default function DisplayForm(props) {\n    \n    let submission = false;\n    const [form, setForm] = useState({});\n    const [collapse, setCollapse] = useState(true);\n    const { match: { params } } = props;\n    const login = useSelector(state => state.login)\n    const form_id =  params.id;\n\n    useEffect(()=>{\n        const url = login.isAdmin?`/form/admin/${form_id}`\n              :`/form/${form_id}`\n        axios.get(url).then(res=>{\n            let _form =  res.data.form.form;\n            // _form.components[0].defaultValue=\"asd\" to set data in the form\n            // _form.components[2].defaultValue=\"15:10:10\"\n            setForm(_form)\n            // console.log(form.title)\n            // console.log(form)\n            // console.log(res.data.form.form)\n        }).catch(err=>{\n            alert(\"Not Found\")\n            props.history.push('/my-surveys')\n        })\n    },[])\n    \n    const handleSubmit = (data)=> {\n            const user_form_data = {data:{}};\n       \n            for(let user_data in data.data){ \n                if(typeof data.data[user_data]==='object'){\n                    for(let index in data.data[user_data]){\n                        if(data.data[user_data][index].type.includes('video')){\n                            data.data[user_data][index] = data.data[user_data][index].url.replace(/^data:video\\/mp4;base64,/,\"video\")\n                        }\n                    }\n                }\n                form.components.map(item =>{\n                    if(item.key === user_data){\n                       \n                        user_form_data['data'][user_data] = {\n                            id:item.id,\n                            key:item.key,\n                            value:data.data[user_data],\n                            user:\"user\",\n                            label:item.label,\n                            input_type:item.type\n                        }\n                        return true;\n                    }\n                })\n            }\n            // console.log(user_form_data)\n            // data.data = user_form_data;\n            user_form_data[\"form_id\"] = form_id;\n            user_form_data[\"form_title\"] = form.title;\n            console.log(user_form_data)\n            axios.post(\"/form/data\",user_form_data).then(res=>{\n                console.log(\"her i submit data \")\n                \n                props.history.push(\"/my-surveys\")\n            }).catch(err=>{\n                alert(\"something Wrong\");\n                \n            })\n            \n            // console.log(\"called\")\n\n        }\n        \n       \n        // // console.log(data)\n        // props.history.push(\"/form/list\")\n      \n\n  return (\n        <div>\n            <h1>Report</h1>\n            {form?.description?.show && <CRow  >\n                <CCol xl=\"12\">\n                <CCard>\n                <CCardHeader>\n                    Report Description\n                </CCardHeader>\n                <CCollapse show={collapse}>\n                    <CCardBody>\n                    \n                    <p>\n                        {form.description.value}\n                    </p>\n\n                    </CCardBody>\n                </CCollapse>\n                <CCardFooter>\n                    <CButton\n                    color=\"primary\"\n                    onClick={()=>setCollapse(!collapse)}\n                    className={'mb-1'}\n                    >Show Description</CButton>\n                </CCardFooter>\n                </CCard>\n                </CCol>\n            </CRow>}\n            <hr/>\n            <Form \n                form={form} \n                onSubmit={handleSubmit}  \n                options={{ template: 'bootstrap3', readOnly:false }}\n                />\n            \n        </div>\n    );\n  \n}"],"sourceRoot":""}